{"version":3,"sources":["services/phones.js","components/NewPerson.js","components/Numbers.js","components/Notification.js","components/Search.js","App.js","index.js"],"names":["baseUrl","axios","id","get","phone","post","put","number","delete","NewPerson","persons","setPersons","setNotification","useState","newName","setNewName","newNumber","setNewNumber","handleNotification","message","name","type","setTimeout","value","onChange","e","target","onClick","preventDefault","repeat","find","p","window","confirm","phones","then","response","map","data","catch","error","Numbers","search","personsToShow","filter","toLowerCase","includes","handleErrorDelete","pe","handleDelete","Notification","notification","className","Search","setSearch","App","useEffect","phoneService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44e617e4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios(baseUrl);\r\n};\r\n\r\nconst getById = (id) => {\r\n  return axios.get(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst createPhone = (phone) => {\r\n  return axios.post(baseUrl, phone);\r\n};\r\n\r\nconst updatePhone = (id, phone) => {\r\n  return axios.put(`${baseUrl}/${id}`, { ...phone, number: phone.number });\r\n};\r\n\r\nconst deletePhone = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getAll: getAll,\r\n  getById: getById,\r\n  createPhone: createPhone,\r\n  updatePhone: updatePhone,\r\n  deletePhone: deletePhone,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport phones from \"../services/phones\";\r\n\r\nconst NewPerson = ({ persons, setPersons, setNotification }) => {\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const repeat = persons.find((p) => p.name === newName);\r\n    if (repeat) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        phones\r\n          .updatePhone(repeat.id, { name: repeat.name, number: newNumber })\r\n          .then((response) => {\r\n            setPersons(\r\n              persons.map((p) => (p.id !== repeat.id ? p : response.data))\r\n            );\r\n          });\r\n      }\r\n      handleNotification(\"Changed\", repeat.name,\"notification\");\r\n      return;\r\n    }\r\n    phones\r\n      .createPhone({ name: newName, number: newNumber })\r\n      .then((response) => {\r\n        setPersons([...persons, response.data]);\r\n      }).catch(error => handleNotification(error.response.data.error,null,\"error\"));\r\n    handleNotification(\"Added\", newName,\"notification\");\r\n  };\r\n\r\n  const handleNotification = (message, name,type) => {\r\n    setNotification({ message: `${message} ${name}`, type: type });\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleChangeName = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n  const handleChangePhone = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <h2>add a new</h2>\r\n      <form>\r\n        <div>\r\n          name: <input value={newName} onChange={handleChangeName} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleChangePhone} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={handleSubmit}>\r\n            add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPerson;\r\n","import React from \"react\";\r\nimport phones from \"../services/phones\";\r\n\r\nconst Numbers = ({ persons, search, setPersons, setNotification }) => {\r\n  const personsToShow = !search\r\n    ? persons\r\n    : persons.filter((p) =>\r\n        p.name.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n\r\n  const handleDelete = (p) => {\r\n    if (window.confirm(`Delete ${p.name}?`)) {\r\n      phones.getById(p.id).catch((error) => handleErrorDelete(p));\r\n      phones.deletePhone(p.id);\r\n\r\n      setPersons(persons.filter((pe) => pe.id !== p.id));\r\n    }\r\n  };\r\n\r\n  const handleErrorDelete = (p) => {\r\n    setNotification({\r\n      message: `Information of ${p.name} has already been remmoved from server`,\r\n      type: \"error\",\r\n    });\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      {personsToShow.map((p) => (\r\n        <div key={p.id}>\r\n          <p>\r\n            {`${p.name} - ${p.number}`}{\" \"}\r\n            <button onClick={() => handleDelete(p)}>delete</button>\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport \"./newperson.css\";\r\n\r\nconst Notification = ({ notification }) => {\r\n \r\n  return (\r\n    <div className={notification.type}>\r\n      <p>{notification.message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst Search = ({ search, setSearch, notification }) => {\r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      {notification ? <Notification notification={notification}/> : null}\r\n\r\n      <div>\r\n        filter show with: <input value={search} onChange={handleSearch} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\nimport NewPerson from \"./components/NewPerson\";\nimport Numbers from \"./components/Numbers\";\nimport Search from \"./components/Search\";\nimport phoneService from \"./services/phones.js\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [notification, setNotification] = useState({});\n\n  useEffect(() => {\n    phoneService.getAll().then((response) => setPersons(response.data));\n  }, []);\n\n  return (\n    <div>\n      <Search search={search} setSearch={setSearch} notification={notification} />\n      <NewPerson persons={persons} setPersons={setPersons} setNotification={setNotification}/>\n      <Numbers persons={persons} search={search} setPersons={setPersons} setNotification={setNotification}/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}